{"version":3,"names":[],"mappings":"","sources":["eat-list.js"],"sourcesContent":["angular.module('xw.controllers').controller('eatCtrl', eatCtrl);\n\nfunction eatCtrl($scope, Dishes, $localStorage, Debug, User, $timeout,\n                 $location, $q, Coupon, Weixin, Utils, Address) {\n    $scope.user = null;\n    $scope.address = '';\n    $scope.addressLoaded = false;\n    $scope.addresses = null;\n    $scope.curDish = null; // 点击购买后被选中的菜品\n    $scope.warehouse = ''; // 作为筛选菜品使用\n    var dishList = $scope.dishList = {}; // 将两个列表分开\n\n    $scope.addDish = function (dish) {\n        $scope.curDish = dish;\n        if (!dish.count) {\n            dish.count = 1;\n        }\n    };\n\n    Utils.cleanLocalStorage();\n\n    $scope.likeDish = function (dish) {\n        Dishes.like(dish._id).then(function () {\n            // 如果成功,并不是很有必要重新拉取用户列表.因为这里不会更新用户信息.\n            dish.liked = !dish.liked;\n        }).catch(Debug.promiseErrFn('更新用户喜欢状态失败'))\n    };\n\n    // for flash-class\n    $scope.addressCount = 0;\n    $scope.isAddressOk = function (isClick) {\n        if (!$scope.address) {\n            isClick && $scope.addressCount++;\n            return false\n        }\n        if (!$scope.address.isAvailableForEat && $scope.path == '/eat') {\n            isClick && $scope.addressCount++;\n            return false;\n        }\n\n        return true;\n    };\n\n    var storage = $scope.storage = $localStorage;\n\n    $scope.$on('$locationChangeStart', function () {\n        $scope.path = $location.path();\n        if ($scope.path == '/eat' && !$scope.dishList.eatList) {\n            getDishList('ready to eat')\n        }\n        if ($scope.path == '/cook' && !$scope.dishList.cookList) {\n            getDishList('ready to cook')\n        }\n    });\n\n    $scope.outOfStock = function (dish) {\n        if (dish.cookingType == 'ready to cook') {\n            return dish.outOfStock\n        } else {\n            // 这里 <= 0 不是 !> 0\n            return !(dish.stockWarehouseObj[$scope.warehouse] > 0)\n        }\n    }\n\n    $scope.$watch('warehouse', function (val) {\n        if (val) {\n            filterEatByWarehouse()\n        }\n    });\n\n    function init() {\n        // 初始化nav\n        var path = $location.path() || '/eat';\n        if (path !== '/cook') path = '/eat';\n        $location.path(path);\n        $scope.path = path;\n\n        Address.getList().then(function (res) {\n            $scope.addresses = res.data;\n            if (!$scope.addresses.length) return;\n\n            // 选择了一个地址,将此作为默认地址\n            if (storage.selectedAddress) {\n                $scope.address = storage.selectedAddress;\n                if (!$scope.address.isDefault) {\n                    $scope.address.isDefault = true;\n                    Address.update($scope.address).then(function () {\n                        delete storage.selectedAddress;\n                    });\n                } else {\n                    delete storage.selectedAddress;\n                }\n            } else {\n                // 如果没有经过选择,则选择一个可配送默认地址\n                res.data.some(function (addr) {\n                    if (addr.isDefault) {\n                        $scope.address = addr;\n                        return true;\n                    }\n                });\n\n                if (!$scope.address) {\n                    $scope.address = $scope.addresses[0];\n                }\n            }\n\n            // 保存warehouse到下单的时候需要,不过回到这个页面的时候会被cleanLocalStorage清除\n            storage.warehouse = $scope.warehouse = $scope.address.warehouse;\n            storage.orderAddress = $scope.address;\n\n            filterEatByWarehouse();\n        }).catch(angular.noop).then(function () {\n            $scope.addressLoaded = true;\n        });\n\n        Weixin.getJsconfig().then(function (res) {\n            Weixin.config({\n                nonceStr :res.data.noncestr,\n                timestamp: res.data.timestamp,\n                signature: res.data.signature\n            })\n        });\n    }\n\n    var type2name = {\n        'ready to eat': 'eatList',\n        'ready to cook': 'cookList'\n    };\n\n    function filterEatByWarehouse() {\n        if (dishList.eatList && ($scope.warehouse == '56c41a9e632771df68dbae0b')) {\n            dishList.eatList = dishList.eatList.filter(function (dish) {\n                return dish.stockWarehouseNotPublished.indexOf($scope.warehouse) == -1\n            });\n\n            $timeout(function () {\n                window.scrollTo(0, window.scrollY + 1);\n            })\n        }\n    }\n\n    function getDishList(type) {\n        $q.all([\n            // 获取订单列表\n            Dishes.getList(type).then(function (res) {\n                $scope.dishList[type2name[type]] = res.data;\n\n                filterEatByWarehouse();\n                return res.data;\n            }),\n            // 初始化user like list\n            $scope.user ? $q.resolve($scope.user) :\n                User.getUserInfo().then(function (res) {\n                // 如果是微信用户, 但是并没有获取到用户的微信信息, 则提示用户重新登录以获取用户信息\n                if (Weixin.isWeixin) {\n                    if (!res.data.weixinId || !res.data.weixinId.openid) {\n                        if (confirm('由于需要您的微信支付授权,否则将无法完成微信支付付款.重新登录并获取微信支付授权吗?')) {\n                            User.logout().then(function () {\n                                location.href = '/mobile/login'\n                            })\n                        }\n                    } else {\n                        User.getWeixinUserInfo(res.data._id).then(function (res) {\n                            if (res.data.subscribe) {\n                                var promotion = storage.promotion;\n                                if (promotion) {\n                                    Coupon.exchangeCouponCode(promotion).then(function () {\n                                        alert('扫二维码优惠券兑换成功!\\n下订单时即可使用.');\n                                        delete storage.promotion;\n                                    })\n                                }\n                            } else if (Weixin.isWeixin) {\n                                location.replace( '/mobile/wxgzh');\n                            }\n                        })\n                    }\n                }\n\n                return $scope.user = res.data;\n            })\n        ]).then(function (results) {\n            //初始化用户的喜好到菜品\n            var dishLikeList = results[1].dishLikeList;\n            results[0].forEach(function (dish) {\n                dishLikeList.some(function (el) {\n                    if (el._id == dish._id) {\n                        return dish.liked = true;\n                    }\n                })\n            })\n        });\n    }\n\n    init();\n}\n"],"file":"js/controllers/eat-list.3284b3f8.js","sourceRoot":"/source/"}