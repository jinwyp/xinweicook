{"version":3,"names":[],"mappings":"","sources":["app.min.js"],"sourcesContent":["angular.module('xw', ['xw.config', 'xw.services', 'xw.controllers', 'xw.directives', 'xw.filters']);\n\nangular.module('xw.config', ['ngStorage']);\n\nangular.module('xw.models', ['ngStorage']);\n\nangular.module('xw.controllers', ['xw.models', 'xw.weixin']);\n\nangular.module('xw.directives', ['xw.models']);\n\nangular.module('xw.filters', []);\n\nangular.module('xw.weixin', []); // tmp\n\nangular.module('xw.services', []);\n//generated by gulp errcode\nangular.module(\"xw.config\").constant(\"errCode\", function(){\nreturn {\n    user: {\n        // 第一位是大项分类,第二位是子分类 第三位开始一次排序 间隔建议为2或5 方便以后插入\n        wrongMobile   : 1110,\n        wrongPassword : 1111,\n        alreadyExist  : 1112,\n        notFound      : 1113,\n\n        userReferrerWrong : 1140,\n\n        userIdWrong : 1150,\n        userGenderWrong : 1152,\n        userOldAddressWrong : 1155,\n\n        invitationSendCodeWrong : 1190,\n\n        addressIdWrong : 1210,\n        addressNotFound : 1212,\n        addressNotInUser : 1214,\n\n        addressLatitudeWrong  : 1220,\n        addressLongitudeWrong : 1221,\n        addressCoordTypeWrong : 1222,\n\n        addressProvinceWrong     : 1225,\n        addressCityWrong         : 1226,\n        addressDistrictWrong     : 1227,\n        addressStreetWrong       : 1228,\n        addressStreetNumberWrong : 1229,\n        addressAddressWrong      : 1230,\n\n        addressContactPersonWrong : 1235,\n        addressMobileWrong        : 1236,\n        addressSortOrderWrong     : 1237,\n\n        addressNotDeliver     : 1270,\n\n        addressBaiduMapNotFoundError     : 1280,\n        addressBaiduMapQueryWrong     : 1290,\n        addressBaiduMapRegionWrong     : 1291,\n\n\n        shoppingCartNotArray     : 1500,\n        shoppingCartDishIdWrong     : 1502,\n        shoppingCartDishNumberWrong     : 1504,\n        shoppingCartSubDishIdWrong     : 1506,\n        shoppingCartSubDishNumberWrong     : 1508\n\n\n\n\n\n    },\n    order: {\n        notFound: 2010,\n\n        orderNumberWrong: 2010,\n        orderIdWrong: 2011,\n        warehouseIdWrong: 2012,\n\n        cookingTypeWrong: 2110,\n        clientFromWrong: 2112,\n\n        creditWrong: 2115,\n        freightWrong: 2117,\n        paymentWrong: 2119,\n        paymentUsedCashWrong: 2120,\n\n        deliveryDateCookWrong: 2122,\n        deliveryTimeCookWrong: 2124,\n        deliveryDateEatWrong: 2126,\n        deliveryTimeEatWrong: 2128,\n\n        dishListArrayWrong: 2130,\n        dishListDishNumberWrong: 2132,\n        dishListDishIdWrong: 2134,\n        dishListSubDishArrayWrong: 2136,\n        dishListSubDishNumberWrong: 2138,\n        dishListSubDishIdWrong: 2139,\n\n\n        addressLatitudeWrong  : 2140,\n        addressLongitudeWrong : 2142,\n\n        addressProvinceWrong     : 2144,\n        addressCityWrong         : 2145,\n        addressDistrictWrong     : 2146,\n        addressStreetWrong       : 2147,\n        addressStreetNumberWrong : 2148,\n        addressAddressWrong      : 2149,\n\n        addressContactPersonWrong : 2152,\n        addressMobileWrong        : 2154,\n\n        addressIdWrong : 2160,\n\n        userCommentWrong: 2180,\n\n        dishIdInvalid: 2190,\n        notOnlyDrink: 2192,\n        notOverTenDrinks: 2194,\n\n\n        orderStatusWrong: 2300,\n        orderPaymentStatusWrong: 2310\n\n\n\n\n    },\n    sms: {\n        wrongCode: 3110,\n        expired: 3111,\n        invalidCode: 3112,\n        wrongType: 3113,\n        tooManyTries: 3114,\n        sendFailed: 3115,\n        reachSendLimitation: 3116\n    },\n    dish: {\n        outOfStock: 4110\n    },\n    coupon: {\n\n        notStart: 5110,\n        expired: 5111,\n        used: 5112,\n        outOfCount: 5113,\n        notFound      : 5120,\n        exchanged: 5121,\n\n        couponIdWrong : 5210,\n        promotionCodeWrong : 5212\n    },\n\n    announcement: {\n        announcementIdWrong : 8110,\n        notFound: 8112\n    }\n};\n});\nangular.module('xw.config').factory('commonInterceptor', ['$localStorage', '$q', function($localStorage, $q) {\n    var noRedirectPath = [/^\\/mobile\\/$/, /^\\/mobile\\/login/, /^\\/mobile\\/cook/, /^\\/mobile\\/resetpwd$/];\n    var noRedirectAPI = ['/api/user', '/api/user/token', '/api/user/shoppingcart', '/api/user/address'];\n    var loginRedirectPath = ['/mobile/me', '/mobile/addresslist', '/mobile/orderaddress', '/mobile/orderlist',\n        '/mobile/invite', '/mobile/coupons', '/mobile/cook', '/mobile/balance', '/mobile/chargebalanceonline',\n        '/mobile/promotion01'];\n\n    return {\n        'request': function(config) {\n            if ($localStorage.access_token) {\n                config.headers.Authorization = 'Bearer ' + $localStorage.access_token;\n            }\n\n            return config;\n        },\n\n        'responseError': function(response) {\n            // do something on error\n            var redirectPath = '';\n            if (response.status == 401) {\n                // todo: redirect\n                if (noRedirectPath.some(function (RE) {return RE.test(location.pathname)})) {\n                    if (noRedirectAPI.indexOf(response.config.url) != -1) {\n                        return $q.reject(response);\n                    }\n                }\n                if (loginRedirectPath.some(function(path){\n                        return location.pathname.indexOf(path) != -1\n                    })) {\n                    redirectPath = '?redirect=' + location.pathname\n                }\n                setTimeout(function () {\n                    // todo:\n                    location.replace('/mobile/login' + redirectPath);\n                }, 120);\n            }\n            return $q.reject(response);\n        }\n    };\n}]);\n\n\nangular.module('xw.config').config(['$httpProvider', '$compileProvider',\n    function($httpProvider, $compileProvider) {\n        // http interceptor\n        $httpProvider.defaults.headers.common.Accept = 'application/vnd.cook.v1+json';\n        $httpProvider.defaults.headers.common['Access-Control-Allow-Origin'] = 'http://m.xinweicook.com';\n        $httpProvider.defaults.headers.common['Accept-Language'] = navigator.language == 'zh-CN' ? 'zh-CN' : 'en-US';\n        $httpProvider.defaults.headers.common['Content-Type'] = 'application/json';\n\n        $httpProvider.interceptors.push('commonInterceptor');\n\n        // disable debug data for performance.\n        $compileProvider.debugInfoEnabled(false);\n    }\n]);\n\n\nangular.pick = function (obj) {\n    var keys = Array.prototype.slice.call(arguments, 1);\n    return keys.reduce(function (o, k) {\n        o[k] = obj[k];\n        return o;\n    }, {});\n};\n\nangular.sort = function sort (_array, compare) {\n    var array = _array.slice(0);\n    var tmp;\n    for (var l = array.length - 1; l >= 1; l--) {\n        for (var i = 0; i < l; i++) {\n            var result = compare(array[i], array[i + 1]);\n            if (result > 0) {\n                tmp = array[i];\n                array[i] = array[i + 1];\n                array[i + 1] = tmp;\n            }\n        }\n    }\n    return array;\n};\n\n/**\n * 图片自适应为屏幕宽度\n */\nangular.module('xw.filters').filter('adapt', function () {\n    var width = Math.floor(document.body.offsetWidth * window.devicePixelRatio);\n    var height = Math.floor(width * 2 / 3);\n    var prefix = '?imageView2/1/w/';\n    var query = prefix + width + '/h/' + height;\n    return function (src, ratio) {\n        return src + (ratio ?\n                prefix + width + '/h/' + Math.floor(width * ratio) :\n                query)\n    }\n});\n\n/**\n *  将类似于1/2的文本显示为¹⁄₂\n */\nangular.module('xw.filters').filter('fraction', function () {\n    var superscripts = ['⁰', '¹', '²', '³', '⁴', '⁵', '⁶', '⁷', '⁸', '⁹'];\n    var subscripts = ['\\u2080', '\\u2081', '\\u2082', '\\u2083', '\\u2084',\n        '\\u2085', '\\u2086', '\\u2087', '\\u2088', '\\u2089'];\n\n    function i2s(sval, scripts) {\n        var ret = '';\n        for (var i = 0; i < sval.length; i++) {\n            ret += scripts[sval[i]]\n        }\n        return ret;\n    }\n\n    return function (str) {\n        return str.replace(/(\\d+)\\/(\\d+)/g, function (_, sup, sub) {\n            return i2s(sup, superscripts) + '⁄' + i2s(sub, subscripts) + ' ';\n        })\n    }\n});\n\n/**\n * 将服务器传回来的dish结构的数据转换为post dish更新购物车时需要的格式(不在模板中使用)\n */\nangular.module('xw.filters').filter('postDish', function () {\n    return function (dish) {\n        return {\n            dish: dish.dish._id,\n            number: dish.number,\n            subDish: !dish.subDish ? [] : dish.subDish.map(function (el) {\n                return {\n                    dish: el.dish._id,\n                    number: el.number\n                }\n            })\n        }\n    }\n});\n\n/**\n * 使mobile变成 133 3333 3333这种形式, 有更好的可读性\n */\nangular.module('xw.filters').filter('beautifyMobile', function () {\n    return function (mobile) {\n        if (!/^\\d{11}$/.test(mobile)) return mobile;\n        return mobile.replace(/^(\\d{3})(\\d{4})(\\d{4})$/,\n            function (_, m1, m2, m3) {\n                return m1 + ' ' + m2 + ' ' + m3;\n            })\n    }\n});\n\n/**\n * 使title变成 '/土豆泥' 这样的形式\n */\nangular.module('xw.filters').filter('subDishTitle', function () {\n    return function (item) {\n        var last = item.subDish.length;\n        if (!last) return '';\n        return '(' + item.subDish.reduce(function (title, cur, i) {\n            return title + cur.dish.title.zh + (i == last - 1 ? '' : '/')\n        }, '') + ')';\n    }\n});\n\n/**\n * 将查询返回的派送时间转换成下单所需要的形式[NOT FOR HTML]\n * time为{hour: ''}, 当type为eat时,\n * time为{day:{day:''}, time: {name: ''}}, 当type为cook时,\n * time为{eat: {hour}, cook:{day,time}}, 当type为all时.\n */\nangular.module('xw.filters').filter('orderTime', function () {\n    return function filter(time, type) {\n        var ret;\n        if (type == 'eat') {\n            return {\n                deliveryDateEat: time.hour.substr(0, 10),\n                deliveryTimeEat: time.hour.substr(11, 5)\n            }\n        } else if (type == 'cook') {\n            ret = {deliveryDateCook: time.day};\n            ret.deliveryTimeCook = time.segment ? time.segment.name+':00' : '12:00';\n            return ret;\n        } else if (type == 'all') {\n            ret = {};\n            if (time.eat) ret = filter(time.eat, 'eat');\n            if (time.cook) angular.extend(ret, filter(time.cook, 'cook'));\n            return ret;\n        }\n    }\n});\n\nangular.module('xw.filters').filter('cookTimeUnion', function () {\n    return function (times) {\n        if (!times) {\n            return times\n        }\n\n        var hasSegment = !!times[0].segment;\n\n        return times.reduce(function (list, cur) {\n            if (hasSegment) {\n                cur.segment.forEach(function (item) {\n                    list.push({\n                        day: cur.day,\n                        segment: item\n                    })\n                })\n            } else {\n                list.push({day: cur.day})\n            }\n            return list;\n        }, [])\n    }\n})\n\n/**\n * 有多种不同的dishList类型, 有些是从后端获得的, 有些是作为更新购物车post回去的,\n * 有些是前端为了展示方便而构造的, 此处对其做统一转换, 免去放在controller中的苦恼.\n * dishes: 待转换待原始数据. tType:target type. sType: source type\n * type: 'displayCart',用来展示待购物车的dish list\n *       'order', 用来下单的list\n *\n * examples:\n * displayCart, 为 {cookList: [], eatList: []}, 其中[]为如下形式\n * [{\n *   dish: Dish, // {_id: '', title: {zh:'', en: ''}, ...}\n *   subDish: [{dish},.]\n *   number\n * }, ..]\n *\n * order, 为 {dishList: []}, 其中[]为如下形式\n * [{\n *   dish: _id,\n *   number: number,\n *   subDish: [..]\n * }, ..]\n */\nangular.module('xw.filters').filter('dishes', function () {\n    return function (dishes, tType, sType) {\n        var ret;\n        // 将displayCart 转换为 order 类型的dishList\n        if (tType == 'order' && sType == 'displayCart') {\n            ret = [];\n            Object.keys(dishes).forEach(function (key) {\n                dishes[key].forEach(function (el) {\n                    ret.push({\n                        dish: el.dish._id,\n                        number: el.number,\n                        subDish: el.subDish.map(function (sDish) {\n                            return {\n                                dish: sDish.dish._id,\n                                number: sDish.number\n                            }\n                        })\n                    });\n                });\n            });\n\n            return {dishList: ret}\n        } else return dishes\n    }\n});\n\n/**\n * 优惠券下单数据转换.要求传入当数据格式为: {code: '优惠码字符串', card: {优惠券对象}}\n */\nangular.module('xw.filters').filter('coupon', function () {\n    return function (coupon) {\n        var ret = {};\n        if (coupon.code) {\n            ret.promotionCode = coupon.code;\n            if (coupon.code.length == 8) {\n                // tcl 优惠券特殊处理. 我们的优惠券要求必须是10位\n                ret.promotionCode = 'zz' + ret.promotionCode;\n            }\n        }\n        if (coupon.card) {\n            ret.coupon = coupon.card._id;\n        }\n        return ret;\n    }\n});\n\n/**\n * 便当配送时间选项补充上请选择时间\n */\nangular.module('xw.filters').filter('eatTimeOptions', function () {\n    return function (times) {\n        if (!times || !times.length) return times;\n        times.unshift({hour: '请选择配送时间'});\n        return times;\n    }\n});\n\nangular.module('xw.filters').filter('eatTimeDisplay', function () {\n    return function (time) {\n        return time.hour\n    }\n});\n\nangular.module('xw.filters').filter('cookTimeOptions', function () {\n    return function (times) {\n        if (!times || !times.length) return times;\n        times.unshift({day: '请选择配送时间'});\n        return times\n    }\n});\n\nangular.module('xw.filters').filter('cookTimeDisplay', function () {\n    return function (time) {\n        return time.day == '请选择配送时间' || time.segment ?\n            time.day : time.day + ' 送达'\n    }\n});\n\n// 返回购物车item的价格\nangular.module('xw.filters').filter('dishPrice', function () {\n    return function (item, total) {\n        var price = item.dish.priceOriginal;\n        if (item.subDish) {\n            for (var i = 0, len = item.subDish.length; i < len; i++) {\n                price += item.subDish[i].dish.priceOriginal;\n            }\n        }\n        return price * (total ? item.number : 1);\n    }\n})\n\n\n// 订单状态\nangular.module('xw.filters').filter('orderStatus', function () {\n    var _status = {\n        'not paid': '未支付',\n        'paid': '已支付',\n        'confirmed': '已确认',\n        'dish finished': '已完成',\n        'packaged': '已打包',\n        shipped: '配送中',\n        finished: '已完成',\n        canceled: '已取消'\n    }\n    \n    return function(status) {\n        return _status[status] || ''\n    }\n})\n\n// 订单状态\nangular.module('xw.filters').filter('orderId', function () {\n    return function(orderId) {\n        if (!orderId) return orderId\n        var ret = []\n        for (var i = 0; i < orderId.length; i+=4) {\n            ret.push(orderId.substr(i, 4))\n        }\n        return ret.join(' ')\n    }\n})\n\n// 支付方式\nangular.module('xw.filters').filter('payment', function () {\n    var _payment = {\n        'alipay direct': '支付宝',\n        'weixinpay':'微信钱包',\n        'account balance': '新味币'\n    }\n    return function(payment) {\n        return _payment[payment] || payment\n    }\n})\n\n\nangular.module('xw.models').factory('Dishes', [\"$http\", function ($http) {\n\n    return {\n        getList: function (cookingType) {\n            cookingType = cookingType || '';\n            return $http.get(\n                '/api/dishes?' +\n                'cookingType=' + cookingType\n            );\n        },\n        like: function (id) {\n            return $http.put('/api/dishes/' + id + '/like');\n        },\n        getOne: function (id) {\n            return $http.get('/api/dishes/' + id);\n        }\n    }\n}]);\n\nangular.module('xw.models').factory('Orders', [\"$http\", function ($http) {\n    return {\n        postOrder: function (data) {\n            return $http.post('/api/orders', data);\n        },\n        deliveryTime: function (data) {\n            return $http.post('/api/orders/delivery/time', data)\n        },\n        deliveryEatTime: function (data) {\n            return $http.post('/api/orders/delivery/time/eat/warehouse', data)\n        },\n        getOrder: function (orderId) {\n            return $http.get('/api/orders/' + orderId);\n        },\n        updateOrder: function (id, data) {\n            return $http.put('/api/orders/' + id, data)\n        },\n        cancel: function (id) {\n            return $http.put('/api/orders/' + id, {\n                isPaymentPaid: \"false\",\n                status: \"canceled\"\n            })\n        },\n        getList: function () {\n            return $http.get('/api/orders');\n        },\n        getUnifiedOrder: function (data) {\n            return $http.post('/api/orders/payment/weixinpay/unifiedorder', data);\n        },\n        price: function (data) {\n            return $http.post('/api/orderprice', data);\n        },\n        payByAlipay: function (id) {\n            return $http.post('/api/orders/payment/alipay/sign', {_id: id})\n        }\n    }\n}]);\n\nangular.module('xw.models').factory('User', [\"$http\", \"$localStorage\", function ($http, $localStorage) {\n    // 这些变量作为更新购物车用\n    // 最近一次添加至cart的时间\n    var cartDate = Date.now();\n    var timeSpan = 500;\n    var timer = null;\n\n    return {\n        login: function (username, password, couponcode) {\n            var args = {\n                username: username,\n                password: password,\n                grant_type: 'password'\n            };\n            if (couponcode) args.couponcode = couponcode;\n            return $http.post('/api/user/token', args).then(function (res) {\n                if (res.data && res.data.access_token) {\n                    $localStorage.access_token = res.data.access_token;\n                }\n\n                return res;\n            })\n        },\n        signup: function (mobile, pwd, code, couponcode, referrer) {\n            var opts = {\n                mobile: mobile,\n                pwd: pwd,\n                code: code,\n                referrer: referrer || ''\n            };\n            if (couponcode) {\n                opts.couponcode = couponcode;\n            }\n            return $http.post('/api/user/signup', opts).then(function (res) {\n                if (res.data && res.data.access_token) {\n                    $localStorage.access_token = res.data.access_token;\n                }\n\n                return res;\n            })\n        },\n        getSmsCode: function (data) {\n            return $http.post('/api/user/sms', data)\n        },\n        logout: function () {\n            return $http.post('/api/user/logout', {\n                token_type_hint: \"access_token\",\n                token: $localStorage.access_token\n            })\n        },\n        getUserInfo: function () {\n            return $http.get('/api/user').then(function (res) {\n                localStorage.uid = res.data._id\n                window.trackJs.configure({ userId: res.data._id})\n                return res;\n            })\n        },\n        updateUser: function (data) {\n            return $http.put('/api/user', data)\n        },\n        resetPwd: function (mobile, pwd, code) {\n            return $http.post('/api/user/resetpassword', {\n                mobile: mobile,\n                pwd: pwd,\n                code: code\n            });\n        },\n        postCart: function (cart) {\n            var now = Date.now();\n            if (now - cartDate > timeSpan) {\n                clearTimeout(timer);\n                return $http.post('/api/user/shoppingcart', {shoppingCart: cart});\n            } else {\n                clearTimeout(timer);\n                timer = setTimeout(this.postCart.bind(this, cart), timeSpan + 100)\n            }\n            cartDate = now;\n            return {'catch': angular.noop}\n        },\n        applyInvitationCode: function (code) {\n            return $http.get('/api/user/coupon/invitation/' + code)\n        },\n        invitedFriends: function () {\n            return $http.get('/api/user/coupon/friends');\n        },\n\n        getWeixinUserInfo: function (id) {\n            return $http.get('/api/user/weixin/userinfo?userId=' + id);\n        }\n\n    }\n}]);\n\nangular.module('xw.models').factory('Address', [\"$http\", function ($http) {\n    return {\n        getList: function () {\n            return $http.get('/api/user/address')\n        },\n        addOne: function (address) {\n            return $http.post('/api/user/address',address)\n        },\n        update: function (address) {\n            return $http.put('/api/user/address' + '/' + address._id, address)\n        },\n        'delete': function (id) {\n            return $http.delete('/api/user/address/' + id)\n        },\n        range: function () {\n            return $http.get('/api/orders/delivery/range')\n        }\n    }\n}]);\n\nangular.module('xw.models').factory('Coupon', [\"$http\", function ($http) {\n    return {\n        getCouponInfo: function (code) {\n            return $http.get('/api/coupons/code/' + code);\n        },\n        exchangeCouponCode: function (code) {\n            return $http.get('/api/user/coupon/code/' + code);\n        }\n    }\n}]);\n\nangular.module('xw.models').factory('Alipay', [\"$http\", function ($http) {\n    return {\n        notify: function (id, isCharge) {\n            var url = isCharge ? '/api/orders/payment/alipay/notify/account'\n                : '/api/orders/payment/alipay/mobile';\n            return $http.post(url, {out_trade_no: id})\n        }\n    }\n}]);\n\nangular.module('xw.models').factory('Balance', [\"$http\", \"Debug\", function ($http, Debug) {\n    return {\n        balance: function () {\n            return $http.get('/api/user/account')\n        },\n        chargeByCode: function (code) {\n            return $http.post('/api/user/account/chargecode', {accountChargeCode: code});\n        },\n        chargeOnline: function (data) {\n            return $http.post('/api/user/account/details', data);\n        },\n        balanceRecords: function () {\n            return $http.get('/api/user/account/details?skip=0&limit=200')\n                .catch(Debug.promiseErrFn('获取余额记录失败'))\n        }\n    }\n}])\n\nangular.module(\"xw.directives\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"add-dish-bar.html\",\"<div class=\\\"selection-cover\\\" ng-cloak ng-if=\\\"dish\\\" ng-click=\\\"hide()\\\"></div><div class=\\\"selections-container\\\" ng-if=\\\"dish\\\" ng-cloak><div class=\\\"block\\\"><h4 class=\\\"text-center\\\">{{dish.title.zh}}<span ng-click=\\\"hide()\\\" class=\\\"button close-button\\\"></span></h4><ul class=\\\"properties\\\" ng-if=\\\"dish.preferences.length\\\"><li ng-repeat=\\\"property in dish.preferences track by property._id\\\"><h5>{{property.name.zh}}</h5><ul class=\\\"selections\\\"><li ng-repeat=\\\"selection in property.foodMaterial track by selection._id\\\" ng-click=\\\"(!selection.outOfStock && selection.dish.isPublished) && (dish.curSelection[property.name.zh] = selection.dish)\\\" ng-class=\\\"{\\'no-stock\\': (selection.outOfStock || !selection.dish.isPublished), selected: dish.curSelection[property.name.zh] == selection.dish}\\\">{{selection.dish.title.zh}}</li></ul></li></ul><div class=\\\"counter-wrapper\\\"><i>份数</i><div class=\\\"counter text-center\\\"><span ng-click=\\\"dish.count>0 && (dish.count=dish.count-1)\\\" class=\\\"minus\\\">-</span> <span class=\\\"number\\\">{{dish.count}}</span> <span ng-click=\\\"dish.count=dish.count+1\\\" class=\\\"add\\\">+</span></div></div><div class=\\\"add-to-cart-button text-center\\\" ng-class=\\\"{invalid: dish.count == 0}\\\" ng-click=\\\"dish.count>0 && addToCart(dish)\\\">加入购物袋</div></div></div>\");\n$templateCache.put(\"address-list.html\",\"<ul class=\\\"address-list\\\" capture-click=\\\"watchAddress($event)\\\"><li class=\\\"address-item\\\" ng-repeat=\\\"address in addresses\\\"><address cur=\\\"{{address.isDefault}}\\\" range=\\\"range\\\" out-address=\\\"address\\\" hide=\\\"hideAddress($index)\\\" leave=\\\"handler.leave[$index]\\\" save=\\\"handler.save[$index]\\\" valid=\\\"handler.valid[$index]\\\" delete-hook=\\\"remove($index)\\\"></address></li><li ng-if=\\\"range\\\" class=\\\"address-item\\\"><address range=\\\"range\\\" out-address=\\\"data.newAddress\\\" cur=\\\"{{!addresses.length}}\\\" hide=\\\"hideAddress(-2)\\\" leave=\\\"handler.leave.newAddress\\\" save=\\\"handler.save.newAddress\\\" valid=\\\"handler.valid.newAddress\\\"></address></li></ul>\");\n$templateCache.put(\"address-selection.html\",\"<div class=\\\"address-selection\\\" flash-class=\\\"{exp: animateTrigger, duration: 400}\\\" ng-if=\\\"show\\\" ng-cloak><a href=\\\"/mobile/orderaddress?path={{path}}&dishId={{dishId}}\\\"><div ng-show=\\\"path != \\'/eat\\' && address\\\" class=\\\"address-tip\\\">配送至:{{address.street + address.address | limitTo: 18}}</div><div ng-show=\\\"noAddress\\\" class=\\\"no-address-tip\\\">您没有可以配送的地址,请先新建地址</div><div ng-show=\\\"path == \\'/eat\\' && (address && !address.isAvailableForEat)\\\" class=\\\"no-address-tip\\\">当前地址不在便当配送范围内</div><div ng-show=\\\"path == \\'/eat\\' && address.isAvailableForEat\\\" class=\\\"address-tip\\\">配送至:{{address.street + address.address | limitTo: 18}}</div></a></div>\");\n$templateCache.put(\"address.html\",\"<div ng-if=\\\"css.isNewAddress && css.edit\\\" class=\\\"new-address-tip\\\">请填写有效的地址以便按时送达</div><div ng-hide=\\\"hide()\\\" class=\\\"address-component\\\" ng-class=\\\"{cur: css.cur || css.isNewAddress, edit: css.edit}\\\" ng-click=\\\"choose($event)\\\"><div class=\\\"address-block\\\" ng-if=\\\"!css.isNewAddress\\\"><span class=\\\"deliverable-tag\\\" ng-if=\\\"addr.isAvailableForEat\\\">便当可送达</span><div>{{addr.contactPerson}}</div><div class=\\\"cur-show\\\">{{addr.mobile | beautifyMobile}}</div><div class=\\\"cur-show\\\">{{addr.province + \\' \\' + addr.city + \\' \\' + addr.district}}</div><div>{{addr.street}}</div><div class=\\\"cur-show\\\">{{addr.address}}</div><div class=\\\"user-actions\\\"><span class=\\\"glyphicon glyphicon-pencil\\\"></span> <span ng-click=\\\"deleteAddress($event)\\\" class=\\\"glyphicon glyphicon-trash\\\"></span></div></div><div class=\\\"new-address-block\\\" ng-if=\\\"css.isNewAddress && !css.edit\\\">+ 新建收货地址</div><form ng-model-options=\\\"{ updateOn: \\'default blur\\', debounce: { \\'default\\': 500, \\'blur\\': 0 } }\\\" ng-class=\\\"{\\'new-address\\': css.isNewAddress}\\\" ng-if=\\\"css.edit\\\" name=\\\"form\\\"><div ng-init=\\\"initForm(form, addr)\\\" ng-class=\\\"{\\'with-tag\\': addr.isAvailableForEat}\\\"><input name=\\\"contactPerson\\\" type=\\\"text\\\" placeholder=\\\"收货人\\\" ng-model=\\\"addr.contactPerson\\\" auto-focus minlength=\\\"2\\\" required><err-tip form=\\\"form\\\" name=\\\"contactPerson\\\" error=\\\"required\\\">必填</err-tip><err-tip form=\\\"form\\\" name=\\\"contactPerson\\\" error=\\\"minlength\\\">联系人姓名至少2个字</err-tip></div><div><input name=\\\"mobile\\\" type=\\\"tel\\\" placeholder=\\\"手机号\\\" ng-model=\\\"addr.mobile\\\" pattern=\\\"^1\\\\d{10}$\\\" required><err-tip form=\\\"form\\\" name=\\\"mobile\\\" error=\\\"required\\\">必填</err-tip><err-tip form=\\\"form\\\" name=\\\"mobile\\\" error=\\\"pattern\\\">请填写11位手机号</err-tip></div><div ng-show=\\\"!css.showFakeInput\\\" class=\\\"selects\\\"><div class=\\\"select\\\"><select required name=\\\"province\\\" id=\\\"province\\\" ng-options=\\\"province for province in options()\\\" ng-change=\\\"trySelectUnique()\\\" ng-model=\\\"addr.province\\\"></select></div><div class=\\\"select\\\"><select required name=\\\"city\\\" id=\\\"city\\\" ng-options=\\\"city for city in options(addr.province)\\\" ng-model=\\\"addr.city\\\"></select></div><div class=\\\"select\\\"><select required name=\\\"district\\\" id=\\\"district\\\" ng-options=\\\"district for district in options(addr.province, addr.city)\\\" ng-model=\\\"addr.district\\\"></select></div></div><div ng-if=\\\"css.showFakeInput\\\"><input type=\\\"text\\\" placeholder=\\\"省、市、区\\\" ng-click=\\\"css.showFakeInput = false\\\"> <span class=\\\"err-tip\\\" ng-if=\\\"(form.province.$error.required||form.city.$error.required||form.district.$error.required) &&form.$submitted\\\">必填</span></div><div ng-click=\\\"showSearchAddress()\\\">{{addr.street}} <input type=\\\"hidden\\\" name=\\\"street\\\" placeholder=\\\"街道\\\" ng-model=\\\"addr.street\\\" required> <span ng-if=\\\"!addr.street\\\" class=\\\"placeholder\\\">街道</span><err-tip form=\\\"form\\\" name=\\\"street\\\" error=\\\"required\\\">必填</err-tip></div><div><input name=\\\"address\\\" type=\\\"text\\\" minlength=\\\"2\\\" placeholder=\\\"详细地址, 街道、楼层、门牌号\\\" required ng-model=\\\"addr.address\\\"><err-tip form=\\\"form\\\" name=\\\"address\\\" error=\\\"required\\\">必填</err-tip><err-tip form=\\\"form\\\" name=\\\"address\\\" error=\\\"minlength\\\">至少2个字符</err-tip></div></form><div class=\\\"search-address\\\" ng-if=\\\"css.edit && css.showSearchAddress\\\"><form id=\\\"address-form\\\"><div><input type=\\\"text\\\" placeholder=\\\"街道、小区、写字楼、地标名称\\\" id=\\\"address\\\" ng-model=\\\"data.street\\\" ng-model-options=\\\"{debounce: 400}\\\" auto-focus ng-change=\\\"searchAddress()\\\"></div></form><div class=\\\"find-address-tip\\\" ng-if=\\\"data.streetList.length\\\">您要找的是不是?</div><div class=\\\"no-address-tip\\\" ng-if=\\\"data.street && !data.streetList.length\\\"><h4>未能找到此地址</h4><p>建议输入街道、小区、写字楼、地标名称等</p></div><ul class=\\\"results\\\"><li ng-click=\\\"confirmStreet($event, street)\\\" ng-repeat=\\\"street in data.streetList\\\"><h4>{{street.address}}</h4><p>{{street.addressInfoBaidu}}</p></li></ul></div></div>\");\n$templateCache.put(\"confirm.html\",\"<div class=\\\"xw-confirm\\\" ng-click><modal close=\\\"close\\\" show=\\\"showModal\\\" pre-close=\\\"preClose\\\"><div class=\\\"text\\\" ng-transclude></div><div class=\\\"button-group\\\"><span ng-click=\\\"cancel()\\\">取消</span><span ng-click=\\\"confirm()\\\">确定</span></div></modal></div>\");\n$templateCache.put(\"err-tip.html\",\"<span class=\\\"err-tip\\\" ng-if=\\\"(form[name].$dirty||form.$submitted) && form[name].$error[error]\\\" ng-transclude></span>\");\n$templateCache.put(\"geetest-sms-button.html\",\"<div class=\\\"geetest-sms-button-group\\\"><div id=\\\"geetestContainer\\\" ng-show=\\\"state==2\\\"></div><span class=\\\"geetest-sms-button\\\" ng-if=\\\"state <= 1\\\" ng-class=\\\"{invalid: state === 0}\\\" ng-click=\\\"state == 1 && showGeetest()\\\">获取验证码</span> <span class=\\\"geetest-sms-button invalid\\\" ng-if=\\\"state == 3\\\">发送成功 {{remains}}</span> <span ng-click=\\\"state == 5 && showGeetest()\\\" class=\\\"geetest-sms-button\\\" ng-class=\\\"{invalid: state == 4}\\\" ng-if=\\\"state > 3\\\">重新获取</span></div>\");\n$templateCache.put(\"menu-nav.html\",\"<nav class=\\\"menu-nav\\\" ng-class=\\\"{\\'empty\\': !localBag.length}\\\"><div ng-class=\\\"{active: path == \\'/mobile/me\\'}\\\"><a href=\\\"/mobile/me\\\"><span>帐号</span></a></div><div ng-class=\\\"{active: path == \\'/eat\\'}\\\"><a href=\\\"/mobile/#/eat\\\"><span>便当</span></a></div><div ng-class=\\\"{active: path == \\'/cook\\' || !path}\\\"><a href=\\\"/mobile/#/cook\\\"><span>食材包</span></a></div><div class=\\\"go-to-cart\\\" ng-class=\\\"{invalid: !isAddressOk()}\\\" ng-if=\\\"localBag.length\\\" flash-class=\\\"{exp: localBag.length, duration: 400}\\\" ng-click=\\\"isAddressOk({isClick: true}) && goToCart()\\\"><div class=\\\"icon bag-icon\\\"><i class=\\\"number\\\" ng-bind=\\\"localBag.length\\\"></i></div><span class=\\\"price\\\" ng-bind=\\\"localBag.price || 0 | number: 1\\\"></span></div></nav>\");\n$templateCache.put(\"modal.html\",\"<div class=\\\"xw-modal-container\\\" ng-show=\\\"css.show\\\"><div class=\\\"xw-modal-backdrop\\\" ng-click=\\\"close()\\\"></div><div class=\\\"xw-modal-content\\\" ng-transclude></div></div>\");\n$templateCache.put(\"shopping-progress-bar.html\",\"<div class=\\\"shopping-progress-bar\\\"><div class=\\\"states\\\"><span ng-class=\\\"{cur: state == \\'state1\\'}\\\" class=\\\"state1\\\">筛选购物袋</span> <span ng-class=\\\"{cur: state == \\'state2\\'}\\\" class=\\\"state2\\\">确认送货地址</span> <span ng-class=\\\"{cur: state == \\'state3\\'}\\\" class=\\\"state3\\\">支付</span></div><div class=\\\"state-bar-container\\\"><div class=\\\"indicator\\\" ng-class=\\\"state\\\"></div></div></div>\");\n$templateCache.put(\"sms-button.html\",\"<div class=\\\"sms-button-group\\\"><span class=\\\"sms-button\\\" ng-if=\\\"state <= 1\\\" ng-class=\\\"{invalid: state === 0}\\\" ng-click=\\\"state == 1 && getSmsCode()\\\">获取验证码</span> <span class=\\\"sms-button invalid\\\" ng-if=\\\"state == 2\\\">{{remains}}秒后重新获取</span> <span ng-click=\\\"state == 4 && getSmsCode()\\\" class=\\\"sms-button\\\" ng-class=\\\"{invalid: state == 3}\\\" ng-if=\\\"state > 2\\\">重新获取</span></div>\");\n$templateCache.put(\"thanksgiving.html\",\"<div class=\\\"thanksgiving\\\"><modal default=\\\"show\\\" ng-click=\\\"close()\\\" close=\\\"close\\\"><div class=\\\"thanksgiving-main\\\">全周好品味，新味感谢您!</div></modal></div>\");}]);\nangular.module('xw.weixin').factory('Weixin',[\"$http\", \"Debug\", function ($http, Debug) {\n\n    var defaults = {\n        //weixin js config\n        wx: {\n            appId: 'wx37a1323e488cef84',\n            jsApiList: ['getLocation', 'onMenuShareTimeline', 'onMenuShareAppMessage']\n        },\n\n        // xinwei location, gcj02\n        location: {\n            longitude: 121.460625,\n            latitude: 31.189426\n        },\n\n        ak: 'xnKgWtGYXf4gkLgreox7xpjI',\n\n        oauthUrl: '/api/orders/payment/weixinpay/oauthcode?orderid='\n    };\n\n    return {\n        isWeixin: /MicroMessenger/i.test(navigator.userAgent),\n\n        oauthUrl: defaults.oauthUrl,\n\n        readyState: false,\n\n        // 微信的事后ready似乎不好用，连个详细的文档都没有，还是自己实现靠谱。\n        ready: function (cb) {\n            if (this.readyState) {\n                cb();\n            } else this.ready.cb = cb;\n        },\n        /**\n         * set jsapi config\n         * @param setting\n         */\n        config: function (setting) {\n            var that = this;\n            var _setting = angular.copy(defaults.wx);\n            _setting.timestamp = setting.timestamp;\n            _setting.nonceStr = setting.nonceStr; // todo: be careful to different backend returned data.\n            _setting.signature = setting.signature;\n\n            wx.config(_setting);\n\n            wx.ready(function() {\n                that.ready.cb && that.ready.cb();\n                that.readyState = true;\n            });\n        },\n        /**\n         * @param success - success callback with {lat: . lng: .} arguemnt\n         * @param fail - fail callback with unknown arguemnt\n         */\n        getLocation: function(success, fail) {\n            var setting = {type: 'gcj02'};\n            success && (setting.success = success);\n            fail && (setting.fail = fail);\n            wx.getLocation(setting);\n        },\n\n        /**\n         * 同微信分享朋友圈接口http://mp.weixin.qq.com/wiki/7/aaa137b55fb2e0456bf8dd9148dd613f.html#.E8.8E.B7.E5.8F.96.E2.80.9C.E5.88.86.E4.BA.AB.E5.88.B0.E6.9C.8B.E5.8F.8B.E5.9C.88.E2.80.9D.E6.8C.89.E9.92.AE.E7.82.B9.E5.87.BB.E7.8A.B6.E6.80.81.E5.8F.8A.E8.87.AA.E5.AE.9A.E4.B9.89.E5.88.86.E4.BA.AB.E5.86.85.E5.AE.B9.E6.8E.A5.E5.8F.A3\n         * @param settings\n         */\n        shareTimeline: function (settings) {\n            wx.onMenuShareTimeline(settings);\n        },\n\n        shareAppMessage: function (settings) {\n            wx.onMenuShareAppMessage(settings);\n        },\n\n        showOptionMenu: function () {\n            wx.showOptionMenu();\n        },\n\n        hideOptionMenu: function () {\n            wx.hideOptionMenu();\n        },\n\n        /**\n         * get location with baidu api\n         * @param lat - gcj02\n         * @param lng\n         * @return promise will resolved with $http res.\n         */\n        getLocationName: function (lat, lng) {\n            var mapUrl = 'http://api.map.baidu.com/geocoder/v2/?output=json&pois=1&coordtype=gcj02ll&callback=JSON_CALLBACK'\n            return $http.jsonp(mapUrl, {\n                params: {\n                    ak: defaults.ak,\n                    location: lat + ',' + lng\n                }\n            })\n        },\n        /**\n         * 获取jsconfig 参数\n         * @param url\n         * @returns {HttpPromise}\n         */\n        getJsconfig: function () {\n            return $http.post('/api/orders/payment/weixinpay/config', {\n                url: location.href.substr(0, location.href.length - location.hash.length)\n            });\n        }\n    }\n}]);\nangular.module('xw.services').factory('Alert', function () {\n    var codeMsg = {\n        1110: '手机号码或密码错误',\n        1111: '手机号码或密码错误',\n        1112: '该用户已存在',\n        1113: '手机号码或密码错误',\n\n        2110: '手机号码错误',\n\n        3110: '短信码错误',\n        3111: '短信码已过期',\n        3112: '无效的短信码',\n        3113: '错误的短信码类型',\n        3114: '短信码验证次数过多, 请重新接收短信码',\n        3115: '发送失败, 请稍后重试',\n        3116: '短信码发送次数达到当日最大次数',\n\n        4110: '库存不足',\n\n        5110: '尚未到充值码使用时间',\n        5111: '优惠码/优惠券已过期',\n        5112: '优惠码/优惠券已被使用',\n        5113: '超出优惠码/优惠券最大使用次数',\n        5121: '只能兑换一次朋友的邀请码(无论是否是同一个朋友), 您已经兑换过一次了'\n    };\n\n    return {\n        show: function (code, def) {\n            var msg = codeMsg[code];\n            if (msg) alert(msg);\n            else if (def) alert(def);\n        },\n        message: function (code) {\n            return codeMsg[code] || '';\n        }\n    }\n})\n\nangular.module('xw.services').provider('Debug', function () {\n    var that = this;\n    that.debugKey = 'debug';\n\n    this.$get = [\"Utils\", function (Utils) {\n        var isDebug = new RegExp('\\\\b' + that.debugKey + '\\\\b');\n        var fakeWarehouse = '';\n        var searches = Utils.searches(location.search);\n        isDebug = isDebug.test(location.search) || !!sessionStorage.getItem('debug');\n\n        if (isDebug && !sessionStorage.getItem('debug')) {\n            sessionStorage.setItem('debug', 'true');\n        }\n        if (isDebug) {\n            if ('fakewarehouse' in searches) {\n                fakeWarehouse = searches.fakewarehouse;\n            }\n        }\n\n        var ret = {\n            //默认根据查询参数中到是否出现debug参数来判断\n            isDebug: isDebug,\n            alert: function (val) {\n                if (this.isDebug) {\n                    console.log(val); // todo:怎么判断log是否有效?如果有效,似乎就没有多大必要调用alert了.\n                    val = Object.prototype.toString.call(val) == \"[object Object]\"\n                        ? JSON.stringify(val) : val;\n                    alert(val);\n                }\n            },\n            assert: function (express, sval) {\n                if (this.isDebug) {\n                    !express && alert(sval);\n                }\n            },\n            promiseErrFn: function (msg) {\n                return function(res) {\n                    ret.alert(msg);\n                    ret.alert(res);\n                }\n            },\n            fakeWarehouse: fakeWarehouse\n        };\n        \n        return ret\n    }]\n});\nangular.module('xw.services').factory('Map', [\"$http\", \"Debug\", function ($http, Debug) {\n    // 如果有必要修改则需要改成provider\n    var topDistance = {\n        xinweioffice: 6000,\n        caohejing1: 1560\n    };\n\n    var map = {\n        bentoNoReach: 999999,\n\n        topDistance: {\n            xinweioffice: 6000,\n            caohejing1: 1560\n        },\n\n        suggestion: function (query, region) {\n            return $http.get('/mobile/placesuggestion?query=' + query + '&region=' + region)\n        },\n\n        search: function (query, region) {\n            return $http.post('/api/user/address/suggestion', {query:query, region:region})\n        },\n\n        // 坐标转化\n        // https://github.com/JackZhouCn/JZLocationConverter/\n        gcj02ToBd09: function (location) {\n            var y = location.lat;\n            var x = location.lng;\n            var z = Math.sqrt(x * x + y * y) + 0.00002 * Math.sin(y * Math.PI);\n            var theta = Math.atan2(y, x) - 0.000003 * Math.cos(x * Math.PI);\n\n            return {\n                lng: z * Math.cos(theta) + 0.0065,\n                lat: z * Math.sin(theta) + 0.006\n            }\n        },\n\n        // 在调用百度suggestion api后会用到\n        bd09ToGcj02: function (location) {\n            var y = location.lat - 0.006;\n            var x = location.lng - 0.0065;\n            var z = Math.sqrt(x * x + y * y) - 0.00002 * Math.sin(y * Math.PI);\n            var theta = Math.atan2(y, x) - 0.000003 * Math.cos(x * Math.PI);\n\n            return {\n                lng: z * Math.cos(theta),\n                lat: z * Math.sin(theta)\n            }\n        },\n\n        //根据坐标计算直线距离\n        //https://github.com/googollee/eviltransform\n        lineDistance: function (latA, lngA, latB, lngB) {\n            var earthR = 6371000;\n            var x = Math.cos(latA * Math.PI / 180) * Math.cos(latB * Math.PI / 180) * Math.cos((lngA - lngB) * Math.PI / 180);\n            var y = Math.sin(latA * Math.PI / 180) * Math.sin(latB * Math.PI / 180);\n            var s = x + y;\n            if (s > 1) {\n                s = 1;\n            }\n            if (s < -1) {\n                s = -1;\n            }\n            var alpha = Math.acos(s);\n            return alpha * earthR;\n        },\n\n        lineDistance2CHJ: function (lat, lng) {\n            var CHJ = this.warehouseCoords.caohejing1;\n            return this.lineDistance(lat, lng, CHJ.lat, CHJ.lng)\n        },\n\n        fixZero: function (d, lat, lng) {\n            if (d !== 0) return d;\n            var lineD = this.lineDistance(lat, lng, 31.189426, 121.460625);\n            return lineD > 1500 ? 999999 : d;\n        },\n\n        /**\n         * 对百度地图routematrix api的后端包装,此处原样返回百度的数据\n         * @param lat gcj02坐标 | [sval, obj, ..]\n         * @param lng\n         * @param warehouse\n         * @returns {HttpPromise}\n         */\n        walkingDistance: function (lat, lng, warehouse) {\n            var args;\n            warehouse = warehouse || '';\n            if (Array.isArray(arguments[0])) {\n                args = arguments[0];\n                warehouse = lng;\n            } else {\n                args = [{lat: lat, lng: lng}];\n            }\n\n            var sval = '';\n            args.forEach(function (arg, i) {\n                if (i >= 5) return; //百度限制\n                var prefix = i == 0 ? '' : '|';\n                if (typeof arg == 'string') {\n                    sval += prefix + arg;\n                } else {\n                    sval += prefix + arg.lat + ',' + arg.lng;\n                }\n            });\n\n            return $http.get('/mobile/distance?destinations=' +\n                encodeURIComponent(sval) + '&warehouse=' + warehouse)\n            .then(function (res) {\n                    var results = res.data.result.elements;\n                    var ret = [];\n                    var len = results.length / 2;\n                    var pair;\n                    for (var i = 0; i < len; i++) {\n                        results[i].warehouse = 'xinweioffice';\n                        results[len + i].warehouse = 'caohejing1';\n                        pair = [results[i], results[len + i]];\n                        pair = angular.sort(pair, function (a, b) {\n                            return (a.distance.value - topDistance.xinweioffice) -\n                                (b.distance.value - topDistance.caohejing1)\n                        });\n                        ret.push(pair);\n                    }\n                    return ret;\n                })\n            .catch(function () {\n                    console.log('get distance error');\n                    return []\n                })\n        },\n\n        /**\n         * 计算距离仓库的距离\n         * @param lat gcj02\n         * @param lng gcj02\n         * @param warehouse - 'CHJ'\n         * @returns {*|Promise.<T>}\n         */\n        distance: function (lat, lng, warehouse) {\n            return this.walkingDistance(lat, lng, warehouse).then(function (res) {\n                var d = res[0][0].distance.value;\n                d = map.fixZero(d, lat, lng);\n                var top = topDistance[res[0][0].warehouse];\n                return {\n                    distance: d,\n                    // 百度有时候返回的是null, 此时就当作1000公里\n                    isInRange: (d === null ? 999999 : d) <= top,\n                    warehouse: res[0][0].warehouse\n                }\n            }).catch(function (res) {\n                Debug.alert('获取步行距离失败');\n                Debug.alert(res);\n            })\n        },\n\n        distances: function (dests, warehouse) {\n            dests = Array.isArray(dests) ? dests : [dests];\n            return this.walkingDistance(dests, warehouse).then(function (res) {\n                return res.map(function (el, i) {\n                    var d = map.fixZero(el[0].distance.value, dests[i].lat, dests[i].lng);\n                    var top = topDistance[el[0].warehouse];\n                    return {\n                        distance: d,\n                        isInRange: (d === null ? 999999 : d) <= top,\n                        warehouse: el[0].warehouse\n                    }\n                })\n            })\n        },\n\n        nearestWarehouse: function (lat, lng) {\n            var that = this;\n            var topDistance2HQ = topDistance['xinweioffice'];\n            var topDistance2CHJ = topDistance['caohejing1'];\n            var warehouses = angular.sort(['xinweioffice', 'caohejing1'].map(function (name) {\n                var warehouse = that.warehouseCoords[name];\n                return {\n                    name: name,\n                    distance: that.lineDistance(lat, lng, warehouse.lat, warehouse.lng)\n                }\n            }), function (a, b) {\n                return (a.distance - topDistance2HQ + 1100) - (b.distance - topDistance2CHJ)\n            });\n\n            if (Debug.fakeWarehouse) {return Debug.fakeWarehouse}\n            return warehouses[0].name;\n\n        },\n\n        warehouseCoords: {\n            xinweioffice: {\n                lat: 31.189426,\n                lng: 121.460625\n            },\n            caohejing1: {\n                lat: 31.169250,\n                lng: 121.398949\n            }\n        }\n    };\n\n    return map;\n}]);\n\nangular.module('xw.services').factory('ScopeDecorator', [\"$location\", function ($location) {\n    return {\n        common: function (scope) {\n            if (!scope) return;\n            scope.back = function () {\n                if (history.length > 1) history.back();\n                else location.href = '/mobile/'\n            }\n        },\n        nav: function (scope) {\n            if (!scope) return;\n            scope.$on('$locationChangeStart', function () {\n                scope.path = $location.path();\n            });\n        }\n    }\n}]);\nangular.module('xw.services').factory('Utils', [\"$localStorage\", function ($localStorage) {\n    return {\n        // todo: base64编码后的字符包括大小写字母各26各,以及数字,以及 + / = 这3个字符\n        // 而 +(这个...) 和 / 在url中会被转义,因此需要再做替换,这里替换 + 为 - , / 替换为 _\n        utf2b64: function (str) {\n            return btoa(unescape(encodeURIComponent(str))).replace(/\\+/g, '-').replace(/\\//g, '_');\n        },\n        b642utf: function (str) {\n            return decodeURIComponent(escape(window.atob(str.replace(/-/g, '+').replace(/_/g, '/'))));\n        },\n\n        // 两个购物车item是否是同一个,购物车item结构为:{dish:dish, number:, subDish:[]}\n        isSameItemInCart: function (item1, item2) {\n            return item1.dish._id == item2.dish._id && //主dish是否相同\n                item1.subDish.every(function (a) { //子dish是否全部相同\n                    return item2.subDish.some(function (b) {\n                        return a.dish._id == b.dish._id\n                    })\n                }) && item1.subDish.length == item2.subDish.length;\n        },\n\n        // 合并本地购物车和线上购物车, 将数据全部合并到本地购物车.\n        // local dish的数量(非dish.number)只会增加不会减少\n        mergeCarts: function (local, server) {\n            if (!local || !local.length) return server;\n            var that = this;\n            for (var i = 0; i < server.length; i++) {\n                var notInLocal = local.every(function (lDish) {\n                    return !that.isSameItemInCart(lDish, server[i])\n                });\n                if (notInLocal)\n                   local.push(server[i]);\n            }\n            return local;\n        },\n\n        /**\n         * 从/api/dishes获取到dish列表中抽取上线且有货的子属性菜品\n         * @param dishList [{_id:., outOfStock: ., ..}]\n         * @param type - 'main', or 'preference'\n         * @returns [24位id, ..] 最小化localStorage的存储成本.(也许取末几位就可以)\n         */\n        getStockId: function (dishList, type) {\n            var idStockMap = {};\n            if (type == 'preference') {\n                dishList.forEach(function (dish) {\n                    dish.preferences.forEach(function (p) {\n                        p.foodMaterial.forEach(function (f) {\n                            if (!idStockMap[f.dish._id] && f.dish.isPublished) {\n                                idStockMap[f.dish._id] = true;\n                            }\n                        })\n                    })\n                });\n            } else {\n                dishList.forEach(function (dish) {\n                    if (!idStockMap[dish._id] && !dish.outOfStock) {\n                        idStockMap[dish._id] = true;\n                    }\n                })\n            }\n\n            return Object.keys(idStockMap);\n        },\n\n        /**\n         * localStorage实在是太大了,去掉多余的信息,只保留必要的信息.这些必要掉信息需要手动清除\n         */\n        cleanLocalStorage: function () {\n            var remain = [ 'promotion', 'access_token', 'selectedAddress'];\n            Object.keys($localStorage).forEach(function (key) {\n                if (remain.indexOf(key) == -1 && key[0] != '$') {\n                    delete $localStorage[key];\n                }\n            })\n        },\n\n        /**\n         * 接收'?a=1&b=&c'这样的查询字符串,输出:{a:1, b:'', c: ''}\n         * @param search - 如果没有则使用location.search\n         * @returns {*}\n         */\n        searches: function (search) {\n            search = search || location.search;\n            return search.slice(1).split('&').reduce(function (obj, cur) {\n                if (cur) {\n                    cur = cur.split('=');\n                    obj[cur[0]] = decodeURIComponent(cur[1] || '');\n                }\n                return obj;\n            }, {});\n        },\n\n        /**\n         * 确认两个地址是否相同,比如上海和上海市应该是相同的\n         * @param addr1\n         * @param addr2\n         * @returns {boolean}\n         */\n        addressEqual: function (addr1, addr2) {\n            addr1 = addr1 || '';\n            addr2 = addr2 || '';\n            if (!addr1 || !addr2) return false;\n            return !addr1.indexOf(addr2) || !addr2.indexOf(addr1)\n        },\n\n        /**\n         * 将老地址中的`徐汇`之类的转换成新地址的`徐汇区`\n         * @param address - {province:.., city: .., district: ..}\n         * @param ref - [从服务端拉取的地址数组, /api/../range]\n         */\n        regularizeAddress: function (address, ref) {\n            var cities, districts;\n            var equal = this.addressEqual;\n            ref.some(function (state) {\n                if (equal(address.province, state.state)) {\n                    address.province = state.state;\n                    cities = state.cities;\n                    return true;\n                }\n            });\n\n            cities && cities.some(function (city) {\n                if (equal(address.city, city.city)) {\n                    address.city = city.city;\n                    districts = city.areas;\n                    return true;\n                }\n            });\n\n            districts && districts.some(function (district) {\n                if (equal(address.district, district)) {\n                    address.district = district;\n                    return true;\n                }\n            });\n\n            return address\n        },\n\n        /**\n         * 基于服务端传回的配送范围数据,以空,或省,或市为参数来查询相应的子地区列表\n         * @example call('浙江') - return ['杭州市', '宁波市', ..]; call(), - ret[全国省]\n         * @param addresses - 服务端范围数据 /api/../range\n         * @param province\n         * @param city\n         * @returns []\n         */\n        addressOptions: function (addresses, province, city) {\n            var len = arguments.length;\n\n            if (len == 1) {\n                return addresses.map(function (el) {return el.state})\n\n            } else if (len == 2) {\n                if (!province) return;\n                //这里可以将结果缓存起来, 以节省len == 2时(以及以后可能相同)的多余计算\n                return addresses.filter(function (el) {\n                    return el.state == province\n                })[0].cities.map(function (el) {\n                        return el.city;\n                    })\n\n            } else if (len == 3) {\n                if (!city) return;\n                var cities = addresses.filter(function(el) {\n                    return el.state == province\n                })[0].cities.filter(function (el) {\n                        return el.city == city\n                    })\n                if (cities && cities.length) {\n                    return cities[0].areas\n                }\n            }\n        },\n\n        stockOfDish: function (dish, warehouse) {\n            return dish.stockWarehouse.some(function (item) {\n                return item.warehouse == warehouse && item.stock > 0;\n            })\n        },\n\n        /**\n         * 例如购物中的item {dish: {}, subDish: [..]}\n         * @param item\n         * @param warehouse\n         */\n        stockOfItem: function (item, warehouse) {\n            var stockOfDish = this.stockOfDish;\n            return stockOfDish(item.dish, warehouse) && !!item.subDish && item.subDish.every(function (el) {\n                    return stockOfDish(el.dish, warehouse)\n                })\n        }\n    }\n}]);\nangular.module('xw.directives').directive('addDishBar', [\"Debug\", \"User\", \"$localStorage\", \"$filter\", \"Utils\", function (Debug, User, $localStorage, $filter, Utils) {\n    return {\n        scope: {\n            dish: '=',\n            user: '=',\n            localBag: '='\n        },\n        templateUrl: 'add-dish-bar.html',\n        link : function ($scope) {\n            var storage = $scope.storage = $localStorage;\n            var localBag = $scope.localBag = [];\n\n            var unwatcher = $scope.$watch('user', function (user) {\n                if (user) {\n                    unwatcher();\n\n                    $scope.localBag = localBag = Utils.mergeCarts(localBag\n                        , user.shoppingCart.filter(function (item) {\n                            return !!item.dish\n                        }));\n                    $scope.totalPrice();\n                }\n            });\n\n            $scope.$watch('dish', function (dish) {\n                if (dish) {\n                    var curSelection = {};\n                    $scope.dish.preferences.forEach(function (property) {\n                        property.foodMaterial.forEach(function (el) {\n                            el.outOfStock = !(el.dish.stockWarehouseObj[storage.warehouse] > 0 || el.dish.cookingType == 'ready to cook')\n                        })\n                        property.foodMaterial.some(function (el) {\n                            if (!el.outOfStock) {\n                                curSelection[property.name.zh] = el.dish;\n                                return true;\n                            } else return false;\n                        })\n                    });\n                    // dish.curSelection存储多属性下的各选中dish,\n                    // 是一个以各属性名为key, 属性下的某个有货dish为value对象\n                    // (尽管一个属性下有可能多个有货dish,但当前选中但只有一个dish)\n                    $scope.dish.curSelection = curSelection;\n                }\n            });\n\n            /**\n             * @param dish 此dish同$scope.dish\n             */\n            $scope.addToCart = function (dish) {\n                var selection = dish.curSelection;\n                var newEntry = {\n                    dish: dish,\n                    number: dish.count,\n                    subDish: Object.keys(selection).map(function (key) {\n                        return {\n                            dish: selection[key],\n                            number: dish.count\n                        };\n                    })\n                };\n\n                // 存在与cart中的与dish的id相同的dish wrapper\n                // - {dish: dish, number:number, subDish: []}\n                var entry;\n\n                localBag.some(function (item) {\n                    if (Utils.isSameItemInCart(item, newEntry)) {\n                        entry = item;\n                        entry.number += newEntry.number;\n                        entry.subDish.forEach(function (sDish) {\n                            sDish.number = entry.number;\n                        });\n                        return true;\n                    }\n                });\n\n                if (!entry) {\n                    localBag.push(newEntry);\n                }\n\n                dish.count = 0;\n\n                $scope.hide();\n\n                User.postCart(localBag.filter(function(item){return !!item.dish}).map(postDishFilter));\n\n                $scope.totalPrice();\n            };\n\n            var postDishFilter = $filter('postDish');\n\n            $scope.totalPrice = function () {\n                var p = localBag.filter(function(item){return !!item.dish}).reduce(function price(total, cur) {\n                    total += cur.dish.priceOriginal * cur.number;\n                    if (cur.subDish) {\n                        total += cur.subDish.reduce(price, 0)\n                    }\n                    return total;\n                }, 0);\n                return localBag.price = p;\n            };\n\n            $scope.totalPrice();\n\n            $scope.hide = function () {\n                $scope.dish = null;\n            };\n\n        }\n    }\n}])\nangular.module('xw.directives').directive('addressList', [\"$q\", \"Alert\", function ($q, Alert) {\n    return {\n        restrict: 'E',\n        scope: {\n            // 外部传入的数据\n            addresses: '=', // 待编辑的地址, 如果为空, 则表示是新地址\n            range: '=', // 省市区数据\n            watchAddress: '=save',\n            editing: '=',\n            hideOthersWhenEdit: '@'\n        },\n        templateUrl: 'address-list.html',\n        link: function ($scope) {\n            var data = $scope.data = {\n                newAddress: {}\n            };\n\n            // 引用地址指令的内部函数\n            var handler = $scope.handler = {\n                save: [],\n                leave: [],\n                valid: []\n            };\n\n            $scope.hideAddress = function (idx) {\n                if ($scope.hideOthersWhenEdit == 'true' && $scope.addresses) {\n                    var editIdx = -1;\n\n                    if ($scope.data.newAddress.edit) {\n                        editIdx = -2;\n                    }\n                    editIdx == -1 && $scope.addresses.some(function (addr, i) {\n                        if (addr.edit) {\n                            editIdx = i;\n                            return true;\n                        }\n                    });\n                    return editIdx != -1 && idx != editIdx;\n                }\n            };\n\n            $scope.editing = function () {\n                if (!$scope.addresses) return false;\n                return !!data.newAddress.edit\n                    || $scope.addresses.some(function (addr) {\n                        return addr.edit;\n                    })\n            };\n\n            $scope.remove = function (idx) {\n                $scope.addresses.splice(idx, 1);\n                handler.save.splice(idx, 1);\n                handler.leave.splice(idx, 1);\n                handler.valid.splice(idx, 1);\n            };\n\n            // 此处监听发生在cur地址指令之外的click.\n            // (如果是在cur指令上发生的click,则交给cur指令自己处理,此处忽略即可)\n            // 这些click表明可能需要保存cur地址指令的数据(如果cur地址指令正处在edit阶段)\n            // 并且需要切换地址指令们的cur状态\n            $scope.watchAddress = function (event) {\n                var target = event.target;\n                var parent = target, cur;\n                // 是否是从address指令上产生的click事件,如果是则定位其序号.\n                do {\n                    if (parent.className.indexOf('address-item') != -1) {\n                        var addressNodes = parent.parentElement.children;\n                        for (var i = 0, len = addressNodes.length; i < len; i++) {\n                            if (addressNodes[i] == parent) {\n                                cur = i;\n                                break;\n                            }\n                        }\n                    }\n                } while (parent = parent.parentElement);\n\n                // 从addresses数据中找出正在处在编辑状态的地址序号\n                var editIdx = -1;\n                var curIdx = -1;\n                $scope.addresses.forEach(function (address, i) {\n                    if (address.edit) {\n                        editIdx = i;\n                    }\n                    if (address.cur) {\n                        curIdx = i;\n                    }\n                });\n\n                // 忽略从cur指令上产生的click事件.\n                if (cur == curIdx ||\n                    (cur == $scope.addresses.length && data.newAddress.cur))\n                    return;\n\n                // 保存\n                var promise;\n                if (editIdx != -1) {\n                    if (handler.valid[editIdx]()) {\n                        promise = handler.save[editIdx]()\n                    } else {\n                        // 阻止离开当前地址指令,并阻止其他地址指令响应click事件.\n                        return event.stopPropagation();\n                    }\n                } else if (data.newAddress.edit) {\n                    if (handler.valid.newAddress()) {\n                        promise = handler.save.newAddress().then(function (address) {\n                            $scope.addresses.push(address);\n                            data.newAddress = {};\n                            return address;\n                        }).catch(function (res) {\n                            Alert.show(res.data.validationStatus, '保存失败');\n                        });\n                    } else {\n                        return event.stopPropagation();\n                    }\n                }\n\n                // 离开\n                if (curIdx != -1) {\n                    handler.leave[curIdx]();\n                    if (editIdx == -1)\n                        promise = $q.resolve($scope.addresses[curIdx]);\n                } else if (data.newAddress.cur) {\n                    handler.leave.newAddress();\n                }\n\n                // 如果是保存那这就是promise,否则不是.\n                return promise;\n            };\n        }\n    }\n}]);\n\nangular.module('xw.directives').directive('addressSelection', function () {\n    return {\n        restrict: 'E',\n        scope: {\n            animateTrigger: '=',\n            show: '=',\n            address: '=',\n            noAddress: '=',\n            dishId: '@',\n            path: '@'\n        },\n        templateUrl: 'address-selection.html'\n    }\n});\nangular.module('xw.directives').directive('address', [\"$timeout\", \"$location\", \"Address\", \"Utils\", \"$q\", \"Weixin\", \"Map\", \"Alert\", function ($timeout, $location, Address, Utils, $q, Weixin, Map, Alert) {\n    return {\n        restrict: 'E',\n        scope: {\n            // 外部传入的数据\n            outAddress: '=', // 待编辑的地址, 如果为空, 则表示是新地址\n            range: '=', // 省市区数据\n\n            // 供外部调用的方法\n            save: '=',\n            leave: '=',\n            valid: '=',\n\n            // 需要调用的外部方法\n            deleteHook: '&', // 当删掉当前地址后给予外部的回调接口\n            hide: '&', // 接收隐藏条件\n\n            // 是否为当前状态地址的默认参数.\n            cur: '@'\n        },\n        templateUrl: 'address.html',\n        link: function ($scope) {\n            var addr;\n\n            var css = $scope.css = {\n                edit: false,\n                cur: $scope.cur == \"true\",\n                showSearchAddress: false,\n                form: null,\n                locating: false,\n                isWeixin: Weixin.isWeixin,\n                isNewAddress: Object.keys($scope.outAddress).length < 2\n            };\n\n            var data = $scope.data = {\n                street: ''\n            };\n\n            // 如果没有一个外部传入的地址,那么这是一个新地址\n            // <2 for angular\n            if (css.isNewAddress) {\n                addr = $scope.addr = {sortOrder: 0};\n                if (css.cur) {\n                    css.edit = true;\n                }\n            } else {\n                addr = $scope.addr = Utils.regularizeAddress(\n                    angular.copy($scope.outAddress), $scope.range);\n            }\n\n            $scope.outAddress.cur = css.cur;\n            $scope.outAddress.edit = !!css.edit;\n\n            $scope.options = Utils.addressOptions.bind(null, $scope.range);\n\n            $scope.$on('$locationChangeStart', function () {\n                if (!css.edit) return;\n                var path = $location.path();\n                css.showSearchAddress = path == '/search-address'\n            });\n\n            $scope.choose = function () {\n                if (css.cur) {\n                    css.edit = true;\n                    $scope.outAddress.edit = true;\n                } else {\n                    css.cur = true;\n                    // 如果这是一个新地址\n                    if (css.isNewAddress) {\n                        css.edit = true;\n                        $scope.outAddress.edit = true;\n                    }\n                }\n                $scope.outAddress.cur = true;\n            };\n\n            $scope.trySelectUnique = function () {\n                var cities = $scope.options(addr.province);\n                if (cities.length == 1) {\n                    addr.city = cities[0];\n                }\n            };\n\n            $scope.deleteAddress = function (event) {\n                event.stopPropagation();\n\n                Address.delete(addr._id);\n                if ($scope.deleteHook) {\n                    $scope.deleteHook();\n                }\n            };\n\n            $scope.showSearchAddress = function () {\n                data.street = addr.street;\n                $location.path('search-address');\n                $scope.data.streetList && ($scope.data.streetList.length = 0);\n                $scope.searchAddress();\n            };\n\n            $scope.searchAddress = function () {\n                if (data.street) {\n                    Map.search(data.street, addr.city || '全国')\n                        .then(function (res) {\n                            $scope.data.streetList = res.data;\n                        });\n                }\n            };\n\n            $scope.confirmStreet = function (event, street) {\n                event.stopPropagation();\n\n                $location.path('');\n                if (!street) return;\n\n                addr.street = street.address;\n                addr.geoLatitude = street.lat;\n                addr.geoLongitude = street.lng;\n            };\n\n            $scope.save = function () {\n                if (css.form.$invalid) return $q.resolve(false);\n\n                css.edit = css.cur = false;\n                $scope.outAddress.edit = $scope.outAddress.cur = false;\n\n                addr.isDefault = true;\n                return Address[!css.isNewAddress ? 'update' : 'addOne'](addr)\n                .then(function (res) {\n                        addr = $scope.addr = res.data;\n                        $scope.outAddress.cur = css.cur = true;\n                        angular.extend($scope.outAddress, res.data);\n                        return res.data;\n                    });\n            };\n\n            $scope.leave = function () {\n                $scope.outAddress.cur = css.cur = false;\n            };\n\n            // 会设置form$submitted为true\n            $scope.valid = function () {\n                css.form.$submitted = true;\n                return !css.form.$invalid;\n            };\n\n            $scope.initForm = function (form) {\n                css.form = form;\n                css.showFakeInput = !addr.province;\n            };\n\n            // todo:必须要先在外部调用Weixin.config,或许内部也用一个后备?\n            $scope.locate = function (event) {\n                event.stopPropagation();\n\n                css.locating = true;\n\n                Weixin.getLocation(function (res) {\n\n                    //console.log(\"weixinGeo:\", res);\n\n                    Weixin.getLocationName(res.latitude, res.longitude).then(function (data) {\n\n                        //console.log(\"baiduGeo:\", data.data);\n\n                        var result = data.data.result;\n                        result = angular.pick(result.addressComponent, 'province', 'city', 'district', 'street', 'street_number');\n                        var location = Map.gcj02ToBd09({\n                            lat: res.latitude,\n                            lng: res.longitude\n                        });\n                        result.geoLatitude = location.lat;\n                        result.geoLongitude = location.lng;\n\n                        Utils.regularizeAddress(result, $scope.range);\n\n                        angular.extend(addr, result);\n\n                    }).catch(angular.noop).then(function () {\n                        css.locating = false; // like finally\n                    });\n                }, function () {\n                    css.locating = false;\n                });\n            };\n\n        }\n    };\n}]);\n\nangular.module('xw.directives').directive('autoFocus', function () {\n    return {\n        restrict: 'A',\n        link: function (scope, el) {\n            setTimeout(function () {\n                el[0].focus();\n            }, 100);\n        }\n    }\n});\nangular.module('xw.directives').directive('backButton', function () {\n    return {\n        template: '<div class=\"back-icon\" ng-click=\"back()\"></div>',\n        link: function ($scope) {\n            // 有些路径需要直接调用 navigator.back(), 有些路径\n            $scope.back = function () {\n                if (history.length <= 1) location.href = '/mobile/';\n                history.back();\n            }\n        }\n    }\n})\nangular.module('xw.directives').directive('captureClick',[\"$parse\", \"$rootScope\", function($parse, $rootScope) {\n    /**\n     * 监听capture阶段的事件\n     * ng-click不支持capture阶段的事件监听,因为和jquery兼容的jqlite不支持.(jquery不支持是因为ie9以下只有冒泡)\n     * 基于以下修改:https://github.com/angular/angular.js/blob/master/src/ng/directive/ngEventDirs.js\n     */\n    return {\n        restrict: 'A',\n        compile: function($element, attr) {\n            var fn = $parse(attr.captureClick, /* interceptorFn */ null, /* expensiveChecks */ true);\n            return function ngEventHandler(scope, element) {\n                element[0].addEventListener('click', function (event) {\n                    var callback = function() {\n                        fn(scope, {$event:event});\n                    };\n                    if ($rootScope.$$phase) {\n                        scope.$evalAsync(callback);\n                    } else {\n                        scope.$apply(callback);\n                    }\n                }, true);\n            };\n        }\n    };\n}])\nangular.module('xw.directives').directive('confirm', [\"$q\", function ($q) {\n    return {\n        restrict: 'E',\n        transclude: true,\n        scope: {\n            show: \"=\"\n        },\n        templateUrl: 'confirm.html',\n        link: function (scope) {\n            var deferred;\n            scope.show = function () {\n                deferred = $q.defer();\n                scope.showModal();\n                return deferred.promise;\n            };\n\n            scope.confirm = function () {\n                scope.close(true);\n                deferred.resolve(true);\n            };\n\n            scope.cancel = function () {\n                scope.close();\n            };\n\n            scope.preClose = function () {\n                deferred.resolve(false);\n            }\n        }\n    }\n}]);\nangular.module('xw.directives').directive('couponCode', [\"Coupon\", \"$q\", function (Coupon, $q) {\n    return {\n        restrict: 'A',\n        scope: {\n            couponPrice: '=couponCode',\n            couponCodeType: '='\n        },\n        require: '?ngModel',\n        link: function (scope, el, attrs, ngModel) {\n            if (!ngModel) return;\n\n            ngModel.$asyncValidators.couponCode = function (mValue, vValue) {\n                var value = mValue || vValue;\n\n                if (!value) return $q.resolve(1);\n\n                value = value.length == 8 ? 'zz' + value : value;\n\n                return Coupon.getCouponInfo(value).then(function (res) {\n                    var coupon = res.data;\n                    var now = new Date(res.headers('date'));\n                    var startDate = new Date(coupon.startDate);\n                    var endDate = new Date(coupon.endDate);\n                    // todo: check price limit\n                    if (startDate <= now && now <= endDate) {\n                        if (coupon.couponType == \"promocodepercentage\") {\n                            scope.couponCodeType = 'promocodepercentage'\n                        }\n                        scope.couponPrice = coupon.price;\n                        // todo: 价格限制\n                    } else {\n                        return $q.reject('未在可使用期限内');\n                    }\n                })\n            }\n        }\n    }\n}]);\nangular.module('xw.directives').directive('errTip', function () {\n    return {\n        scope: {\n            form: '=',\n            error: '@',\n            name: '@'\n        },\n        transclude: true,\n        templateUrl: 'err-tip.html'\n    }\n})\nangular.module('xw.directives').directive('flashClass', function () {\n    return {\n        restrict: 'A',\n        scope: {options: '=flashClass'},\n        require: '?ngModel',\n        link: function (scope, el) {\n            var time = scope.options.duration || 700;\n            var className = scope.options.className || 'flash';\n            scope.$watch('options.exp', function (newVal, oldVal) {\n                if (((newVal == oldVal) && newVal) || newVal) {\n                    setTimeout(function () {\n                        el.addClass(className);\n                        setTimeout(function () {\n                            el.removeClass(className)\n                        }, time)\n                    }, 200)\n                }\n            })\n        }\n    }\n});\nangular.module('xw.directives').directive('geetestSmsButton', [\"Debug\", \"User\", \"$interval\", \"$window\", \"Alert\", \"$http\", function (Debug, User, $interval, $window, Alert, $http) {\n    return {\n        scope: {\n            valid: '@',\n            mobile: '@',\n            type: '@',\n            triggered: '='\n        },\n        templateUrl: 'geetest-sms-button.html',\n        link : function (scope) {\n            $http.get('/api/user/signup/geetest/register').success(function(result) {\n                var s = document.createElement('script');\n                var params = {\n                    //'745d959dec1191e086febd11aa684c9d'\n                    gt: 'd41d16df5b99010ec511ec10aaaafcb8',\n                    width: document.body.offsetWidth,\n                    challenge: result.challenge\n                };\n\n                s.src = 'http://api.geetest.com/get.php?' + Object.keys(params)\n                        .map(function (key) {return key + '=' + params[key]})\n                        .join('&');\n\n\n                var fatherDom = angular.element(document.getElementById('geetestContainer'));\n\n                fatherDom.append(s);//append the script where ever you want\n\n                $window.gt_custom_ajax = function(result, id, message) {\n                    if(result) {\n                        var value = angular.element(document.getElementById('geetestContainer')).find('input');\n\n                        var data = {\n                            \"geetest_challenge\":value[0].value,\n                            \"geetest_validate\":value[1].value,\n                            \"geetest_seccode\":value[2].value,\n                            \"type\" : scope.type,\n                            \"mobile\" : scope.mobile\n                        };\n\n                        var timer = $interval(function () {\n                            if (!--scope.remains) {\n                                $interval.cancel(timer);\n                                scope.remains = remains;\n                                scope.triggered = true\n\n                                stateMachine('show-refetch', scope.valid == 'true');\n                                try {\n                                    GeeTest[0].refresh()\n                                } catch (e) {}\n                            }\n                        }, 1000);\n\n                        User.getSmsCode(data).success(function() {\n                            console.log(\"success\")\n                        }).catch(function (res) {\n                            Alert.show(res.data.validationStatus, '验证码发送失败');\n                        });\n\n                        stateMachine('hide-geetest')\n                    }\n                }\n            });\n\n            var remains = 30;\n            scope.remains = 30;\n\n            scope.$watch('mobile', function (mobile) {\n                stateMachine('mobile', scope.valid == 'true')\n            });\n\n            scope.showGeetest = function () {\n                stateMachine('show-geetest');\n            };\n\n            // {0: init-not-ready, 1: init-ready, 2: hide-btn-show-geetest,\n            //  3: hide-geetest-show-sending 4 show-re-btn-invalid, 5 re-btn}\n            scope.state = 0;\n            function stateMachine(action, data) {\n                var state = scope.state, isValid = !!data;\n                if (action == 'mobile') {\n                    if (state === 0 && isValid) {\n                        scope.state = 1;\n                    } else if (state == 1 && !isValid) {\n                        scope.state = 0;\n                    } else if (state == 2 && !isValid) {\n                        scope.state = 4;\n                    }\n                    else if (state == 4 && isValid) {\n                        scope.state = 5;\n                    } else if (state == 5 && !isValid) {\n                        scope.state = 4;\n                    }\n                } else if (action == 'show-geetest') {\n                    if (state == 1 || state == 5) {\n                        scope.state = 2;\n                    }\n                } else if (action == 'hide-geetest') {\n                    if (state == 2) {\n                        scope.state = 3;\n                    }\n                } else if (action == 'show-refetch') {\n                    if (state == 3) {\n                        scope.state = isValid ? 5 : 4;\n                    }\n                }\n            }\n        }\n    }\n}])\nangular.module('xw.directives').directive('imgLazyLoad', ['$window', '$document', '$timeout', function ($window, $document, $timeout) {\n\n    var lazyDOMs = [],\n        document = $document[0],\n        windowBottom;\n\n    /**\n     * 获取目标元素距离根元素的高度\n     */\n    function getDOMTop(elem) {\n        var top = elem.offsetTop;\n        while (elem = elem.offsetParent) {\n            top += elem.offsetTop\n        }\n        return top;\n    }\n\n    function getWindowBottom() {\n        return document.documentElement.clientHeight + ($window.scrollY ||\n            document.documentElement.scrollTop || document.body.scrollTop);\n    }\n\n    getWindowBottom.ok = true;\n\n    angular.element($window).on('scroll', function () {\n        windowBottom = getWindowBottom();\n        for (var i = 0, el; i < lazyDOMs.length;) {\n            if (getDOMTop(lazyDOMs[i][0]) < windowBottom) {\n                el = angular.element(lazyDOMs[i][0]);\n                el[0].src = lazyDOMs[i][1].$eval(el.attr('img-lazy-load'));\n                lazyDOMs.splice(i, 1);\n            } else {\n                i++;\n            }\n        }\n    });\n\n    return {\n        restrict: 'A',\n        link: function (scope, el, attr) {\n            var dom = el[0];\n            lazyDOMs.push([dom, scope]);\n            var unwatcher = scope.$watch(attr.imgLazyLoad, function (src) {\n                if (src) {\n                    unwatcher();\n                    if (getWindowBottom.ok) {\n                        windowBottom = getWindowBottom();\n                        getWindowBottom.ok = false;\n                        setTimeout(function () {\n                            getWindowBottom.ok = true;\n                        }, 120); // 120 ms内不再计算window bottom\n                        // qq 浏览器会忽略100ms以下的setTimeout !!!!\n                        // http://www.qianduan.net/qqliu-lan-qi-x5nei-he-wen-ti-hui-zong/\n                    }\n                    // todo: 试着用setTimeout来比较这里的性能\n                    if (getDOMTop(dom) < windowBottom) {\n                        lazyDOMs.some(function (pair, i) {\n                            if (pair[0] == dom) {\n                                dom.src = src;\n                                lazyDOMs.splice(i, 1);\n                                return true;\n                            }\n                        })\n                    }\n                }\n            });\n\n            if (!scope._lazyDestroyBinded) {\n                scope._lazyDestroyBinded = true;\n                scope.$on('$destroy', function () {\n                    for (var i = 0; i < lazyDOMs.length;) {\n                        if (lazyDOMs[i][1] == scope) {\n                            lazyDOMs.splice(i, 1);\n                        } else {\n                            i++;\n                        }\n                    }\n                })\n            }\n        }\n    }\n}])\nangular.module('xw.directives').directive('menuNav', function () {\n    return {\n        restrict: 'E',\n        scope: {\n            path: '@',\n            localBag: '=',\n            isAddressOk: '&'\n        },\n        templateUrl: 'menu-nav.html',\n        link: function ($scope) {\n            $scope.goToCart = function () {\n                location.href= '/mobile/cart';\n            };\n\n            if (location.pathname == '/mobile/me') {\n                $scope.path = '/mobile/me';\n            }\n        }\n    }\n})\nangular.module('xw.directives').directive('modal', function () {\n    return {\n        restrict: 'E',\n        transclude: true,\n        scope: {\n            show: \"=\",\n            close: '=',\n            toggle: '=',\n            preClose: '=?'\n        },\n        templateUrl: 'modal.html',\n        link: function (scope, el, attrs) {\n            scope.css = {show: false};\n\n            if (attrs.default == 'show') {\n                scope.css.show = true;\n            }\n\n            scope.show = function () {\n                setStatus(event, true);\n            };\n\n            scope.close = function (ignorePreClose) {\n                if (!ignorePreClose && scope.preClose) {\n                    scope.preClose();\n                }\n                setStatus(event, false);\n            };\n\n            scope.toggle = function () {\n                setStatus(event);\n            };\n\n            function setStatus(event, status) {\n                event && event.stopPropagation();\n                if (status === undefined) {\n                    scope.css.show = !scope.css.show;\n                } else {\n                    scope.css.show = status;\n                }\n            }\n        }\n    }\n});\nangular.module('xw.directives').directive('shoppingProgressBar', function () {\n    return {\n        templateUrl: 'shopping-progress-bar.html',\n        scope: true,\n        link: function (scope) {\n            var path = location.pathname;\n            if (path == '/mobile/cart') {\n                scope.state = 'state1';\n            } else if (path == '/mobile/orderaddress') {\n                scope.state = 'state2'\n            } else if (path == '/mobile/orderpay') {\n                scope.state = 'state3'\n            }\n        }\n    }\n})\nangular.module('xw.directives').directive('smsButton', [\"Debug\", \"User\", \"$interval\", function (Debug, User, $interval) {\n    return {\n        scope: {\n            valid: '@',\n            mobile: '@',\n            type: '@'\n        },\n        templateUrl: 'sms-button.html',\n        link : function (scope) {\n            scope.state = 0; // {0: init-not-ready, 1: init-ready, 2: receiving, 3: refetch-not-ready, 4: refetch-ready}\n            scope.remains = 60;\n\n            var cancel = watchMobile();\n\n            scope.getSmsCode = function () {\n                scope.state = 2;\n                if (cancel) {\n                    cancel();\n                    cancel = null;\n                }\n\n                var timer = $interval(function () {\n                    if (!--scope.remains) {\n                        $interval.cancel(timer);\n                        scope.remains = 60;\n\n                        Debug.assert(typeof scope.valid == 'string', '由@传入的valid应当是string');\n                        if (scope.valid === 'true') {\n                            scope.state = 4;\n                        } else {\n                            scope.state = 3;\n                        }\n\n                        // 重新 watch mobile\n                        cancel = watchMobile();\n                    }\n                }, 1000);\n\n                User.getSmsCode({\n                    mobile: scope.mobile,\n                    type: scope.type\n                }).then(function (res) {\n                    //dev\n                    if (res.data.code) {\n                        // todo: should alert some thing?\n                    }\n                }).catch(function (res) {\n                    // todo: should alert some thing?\n                    alert('获取验证码失败,请稍后重试');\n                    Debug.alert(res);\n                })\n            };\n\n            function watchMobile() {\n                return scope.$watch('mobile', function (mobile) {\n                    if (scope.state === 0 && mobile && mobile.length == 11) {\n                        scope.state = 1;\n                    } else if (scope.state === 1 && (!mobile || mobile.length != 11)) {\n                        scope.state = 0;\n                    } else if (scope.state === 3 && mobile && mobile.length ==11) {\n                        scope.state = 4;\n                    } else if (scope.state === 4 && (!mobile || mobile.length != 11)) {\n                        scope.state = 3;\n                    }\n                })\n            }\n        }\n    }\n}])\nangular.module('xw.directives').directive('thanksgiving', [\"$timeout\", function ($timeout) {\n    return {\n        restrict: 'E',\n        templateUrl: 'thanksgiving.html',\n        link: function (scope) {\n            $timeout(function () {\n                scope.close()\n            }, 4500);\n        }\n    }\n}]);"],"file":"js/app.min.4e7ec31b.js","sourceRoot":"/source/"}